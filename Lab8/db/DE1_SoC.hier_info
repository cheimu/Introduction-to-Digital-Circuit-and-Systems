|DE1_SoC
CLOCK_50 => CLOCK_50.IN1
HEX0[0] << scoreReport:display0.display
HEX0[1] << scoreReport:display0.display
HEX0[2] << scoreReport:display0.display
HEX0[3] << scoreReport:display0.display
HEX0[4] << scoreReport:display0.display
HEX0[5] << scoreReport:display0.display
HEX0[6] << scoreReport:display0.display
HEX1[0] << scoreReport:display1.display
HEX1[1] << scoreReport:display1.display
HEX1[2] << scoreReport:display1.display
HEX1[3] << scoreReport:display1.display
HEX1[4] << scoreReport:display1.display
HEX1[5] << scoreReport:display1.display
HEX1[6] << scoreReport:display1.display
HEX2[0] << scoreReport:display2.display
HEX2[1] << scoreReport:display2.display
HEX2[2] << scoreReport:display2.display
HEX2[3] << scoreReport:display2.display
HEX2[4] << scoreReport:display2.display
HEX2[5] << scoreReport:display2.display
HEX2[6] << scoreReport:display2.display
HEX3[0] << <VCC>
HEX3[1] << <VCC>
HEX3[2] << <VCC>
HEX3[3] << <VCC>
HEX3[4] << <VCC>
HEX3[5] << <VCC>
HEX3[6] << <VCC>
HEX4[0] << <VCC>
HEX4[1] << <VCC>
HEX4[2] << <VCC>
HEX4[3] << <VCC>
HEX4[4] << <VCC>
HEX4[5] << <VCC>
HEX4[6] << <VCC>
HEX5[0] << <VCC>
HEX5[1] << <VCC>
HEX5[2] << <VCC>
HEX5[3] << <VCC>
HEX5[4] << <VCC>
HEX5[5] << <VCC>
HEX5[6] << <VCC>
KEY[0] => _.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] << <GND>
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => w.DATAIN
GPIO_0[0] << <GND>
GPIO_0[1] << <GND>
GPIO_0[2] << <GND>
GPIO_0[3] << <GND>
GPIO_0[4] << <GND>
GPIO_0[5] << <GND>
GPIO_0[6] << <GND>
GPIO_0[7] << <GND>
GPIO_0[8] << <GND>
GPIO_0[9] << <GND>
GPIO_0[10] << <GND>
GPIO_0[11] << <GND>
GPIO_0[12] << led_matrix_driver:led_array.row_sink[0]
GPIO_0[13] << led_matrix_driver:led_array.row_sink[1]
GPIO_0[14] << led_matrix_driver:led_array.row_sink[2]
GPIO_0[15] << led_matrix_driver:led_array.row_sink[3]
GPIO_0[16] << led_matrix_driver:led_array.row_sink[4]
GPIO_0[17] << led_matrix_driver:led_array.row_sink[5]
GPIO_0[18] << led_matrix_driver:led_array.row_sink[6]
GPIO_0[19] << led_matrix_driver:led_array.row_sink[7]
GPIO_0[20] << led_matrix_driver:led_array.green_driver[0]
GPIO_0[21] << led_matrix_driver:led_array.green_driver[1]
GPIO_0[22] << led_matrix_driver:led_array.green_driver[2]
GPIO_0[23] << led_matrix_driver:led_array.green_driver[3]
GPIO_0[24] << led_matrix_driver:led_array.green_driver[4]
GPIO_0[25] << led_matrix_driver:led_array.green_driver[5]
GPIO_0[26] << led_matrix_driver:led_array.green_driver[6]
GPIO_0[27] << led_matrix_driver:led_array.green_driver[7]
GPIO_0[28] << led_matrix_driver:led_array.red_driver[0]
GPIO_0[29] << led_matrix_driver:led_array.red_driver[1]
GPIO_0[30] << led_matrix_driver:led_array.red_driver[2]
GPIO_0[31] << led_matrix_driver:led_array.red_driver[3]
GPIO_0[32] << led_matrix_driver:led_array.red_driver[4]
GPIO_0[33] << led_matrix_driver:led_array.red_driver[5]
GPIO_0[34] << led_matrix_driver:led_array.red_driver[6]
GPIO_0[35] << led_matrix_driver:led_array.red_driver[7]


|DE1_SoC|clock_divider:cdiv
clock => divided_clocks[0]~reg0.CLK
clock => divided_clocks[1]~reg0.CLK
clock => divided_clocks[2]~reg0.CLK
clock => divided_clocks[3]~reg0.CLK
clock => divided_clocks[4]~reg0.CLK
clock => divided_clocks[5]~reg0.CLK
clock => divided_clocks[6]~reg0.CLK
clock => divided_clocks[7]~reg0.CLK
clock => divided_clocks[8]~reg0.CLK
clock => divided_clocks[9]~reg0.CLK
clock => divided_clocks[10]~reg0.CLK
clock => divided_clocks[11]~reg0.CLK
clock => divided_clocks[12]~reg0.CLK
clock => divided_clocks[13]~reg0.CLK
clock => divided_clocks[14]~reg0.CLK
clock => divided_clocks[15]~reg0.CLK
clock => divided_clocks[16]~reg0.CLK
clock => divided_clocks[17]~reg0.CLK
clock => divided_clocks[18]~reg0.CLK
clock => divided_clocks[19]~reg0.CLK
clock => divided_clocks[20]~reg0.CLK
clock => divided_clocks[21]~reg0.CLK
clock => divided_clocks[22]~reg0.CLK
clock => divided_clocks[23]~reg0.CLK
clock => divided_clocks[24]~reg0.CLK
clock => divided_clocks[25]~reg0.CLK
clock => divided_clocks[26]~reg0.CLK
clock => divided_clocks[27]~reg0.CLK
clock => divided_clocks[28]~reg0.CLK
clock => divided_clocks[29]~reg0.CLK
clock => divided_clocks[30]~reg0.CLK
clock => divided_clocks[31]~reg0.CLK
divided_clocks[0] <= divided_clocks[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[1] <= divided_clocks[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[2] <= divided_clocks[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[3] <= divided_clocks[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[4] <= divided_clocks[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[5] <= divided_clocks[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[6] <= divided_clocks[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[7] <= divided_clocks[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[8] <= divided_clocks[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[9] <= divided_clocks[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[10] <= divided_clocks[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[11] <= divided_clocks[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[12] <= divided_clocks[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[13] <= divided_clocks[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[14] <= divided_clocks[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[15] <= divided_clocks[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[16] <= divided_clocks[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[17] <= divided_clocks[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[18] <= divided_clocks[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[19] <= divided_clocks[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[20] <= divided_clocks[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[21] <= divided_clocks[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[22] <= divided_clocks[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[23] <= divided_clocks[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[24] <= divided_clocks[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[25] <= divided_clocks[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[26] <= divided_clocks[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[27] <= divided_clocks[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[28] <= divided_clocks[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[29] <= divided_clocks[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[30] <= divided_clocks[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[31] <= divided_clocks[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|userInput:user
Reset => out.OUTPUTSELECT
Clock => out~reg0.CLK
Clock => Input2.CLK
Clock => Input1.CLK
Input => Input1.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|gameStart:gameActivate
Clock => ps.CLK
Reset => ps.OUTPUTSELECT
Input => ns.IN1
start <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|CC:l0
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => light~reg0.CLK
Reset => always1.IN0
Input => always0.IN0
Input => always0.IN0
Input => always0.IN0
gameOver => ns.OUTPUTSELECT
gameStart => always1.IN1
beginningPosition => light.DATAB
nu => always0.IN1
nd => always0.IN1
light <= light~reg0.DB_MAX_OUTPUT_PORT_TYPE
limit => always0.IN1


|DE1_SoC|CC:l1
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => light~reg0.CLK
Reset => always1.IN0
Input => always0.IN0
Input => always0.IN0
Input => always0.IN0
gameOver => ns.OUTPUTSELECT
gameStart => always1.IN1
beginningPosition => light.DATAB
nu => always0.IN1
nd => always0.IN1
light <= light~reg0.DB_MAX_OUTPUT_PORT_TYPE
limit => always0.IN1


|DE1_SoC|CC:l2
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => light~reg0.CLK
Reset => always1.IN0
Input => always0.IN0
Input => always0.IN0
Input => always0.IN0
gameOver => ns.OUTPUTSELECT
gameStart => always1.IN1
beginningPosition => light.DATAB
nu => always0.IN1
nd => always0.IN1
light <= light~reg0.DB_MAX_OUTPUT_PORT_TYPE
limit => always0.IN1


|DE1_SoC|CC:l3
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => light~reg0.CLK
Reset => always1.IN0
Input => always0.IN0
Input => always0.IN0
Input => always0.IN0
gameOver => ns.OUTPUTSELECT
gameStart => always1.IN1
beginningPosition => light.DATAB
nu => always0.IN1
nd => always0.IN1
light <= light~reg0.DB_MAX_OUTPUT_PORT_TYPE
limit => always0.IN1


|DE1_SoC|CC:l4
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => light~reg0.CLK
Reset => always1.IN0
Input => always0.IN0
Input => always0.IN0
Input => always0.IN0
gameOver => ns.OUTPUTSELECT
gameStart => always1.IN1
beginningPosition => light.DATAB
nu => always0.IN1
nd => always0.IN1
light <= light~reg0.DB_MAX_OUTPUT_PORT_TYPE
limit => always0.IN1


|DE1_SoC|CC:l5
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => light~reg0.CLK
Reset => always1.IN0
Input => always0.IN0
Input => always0.IN0
Input => always0.IN0
gameOver => ns.OUTPUTSELECT
gameStart => always1.IN1
beginningPosition => light.DATAB
nu => always0.IN1
nd => always0.IN1
light <= light~reg0.DB_MAX_OUTPUT_PORT_TYPE
limit => always0.IN1


|DE1_SoC|CC:l6
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => light~reg0.CLK
Reset => always1.IN0
Input => always0.IN0
Input => always0.IN0
Input => always0.IN0
gameOver => ns.OUTPUTSELECT
gameStart => always1.IN1
beginningPosition => light.DATAB
nu => always0.IN1
nd => always0.IN1
light <= light~reg0.DB_MAX_OUTPUT_PORT_TYPE
limit => always0.IN1


|DE1_SoC|CC:l7
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => light~reg0.CLK
Reset => always1.IN0
Input => always0.IN0
Input => always0.IN0
Input => always0.IN0
gameOver => ns.OUTPUTSELECT
gameStart => always1.IN1
beginningPosition => light.DATAB
nu => always0.IN1
nd => always0.IN1
light <= light~reg0.DB_MAX_OUTPUT_PORT_TYPE
limit => always0.IN1


|DE1_SoC|LFSR_3:random
Clock => Clock.IN3
Reset => Reset.IN3
Output[0] <= pattern[0].DB_MAX_OUTPUT_PORT_TYPE
Output[1] <= pattern[1].DB_MAX_OUTPUT_PORT_TYPE
Output[2] <= LFSR:bit2.Q


|DE1_SoC|LFSR_3:random|LFSR:bit0
Clock => ps.CLK
Reset => ps.OUTPUTSELECT
Input => ps.DATAA
Q <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|LFSR_3:random|LFSR:bit1
Clock => ps.CLK
Reset => ps.OUTPUTSELECT
Input => ps.DATAA
Q <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|LFSR_3:random|LFSR:bit2
Clock => ps.CLK
Reset => ps.OUTPUTSELECT
Input => ps.DATAA
Q <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|pipeGenerator:pipe0
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => count[7].CLK
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Clock => ps[7].CLK
Clock => gap[0].CLK
Clock => gap[1].CLK
Reset => always1.IN0
gameStart => always1.IN1
gameOver => ns[7].OUTPUTSELECT
gameOver => ns[6].OUTPUTSELECT
gameOver => ns[5].OUTPUTSELECT
gameOver => ns[4].OUTPUTSELECT
gameOver => ns[3].OUTPUTSELECT
gameOver => ns[2].OUTPUTSELECT
gameOver => ns[1].OUTPUTSELECT
gameOver => ns[0].OUTPUTSELECT
num[0] => Decoder0.IN2
num[1] => Decoder0.IN1
num[2] => Decoder0.IN0
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|pipeShifter:pipe1
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => count[7].CLK
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Clock => ps[7].CLK
Reset => always1.IN0
rightPipe[0] => ns[0].DATAA
rightPipe[1] => ns[1].DATAA
rightPipe[2] => ns[2].DATAA
rightPipe[3] => ns[3].DATAA
rightPipe[4] => ns[4].DATAA
rightPipe[5] => ns[5].DATAA
rightPipe[6] => ns[6].DATAA
rightPipe[7] => ns[7].DATAA
gameStart => always1.IN1
gameOver => ns[7].OUTPUTSELECT
gameOver => ns[6].OUTPUTSELECT
gameOver => ns[5].OUTPUTSELECT
gameOver => ns[4].OUTPUTSELECT
gameOver => ns[3].OUTPUTSELECT
gameOver => ns[2].OUTPUTSELECT
gameOver => ns[1].OUTPUTSELECT
gameOver => ns[0].OUTPUTSELECT
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|pipeShifter:pipe2
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => count[7].CLK
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Clock => ps[7].CLK
Reset => always1.IN0
rightPipe[0] => ns[0].DATAA
rightPipe[1] => ns[1].DATAA
rightPipe[2] => ns[2].DATAA
rightPipe[3] => ns[3].DATAA
rightPipe[4] => ns[4].DATAA
rightPipe[5] => ns[5].DATAA
rightPipe[6] => ns[6].DATAA
rightPipe[7] => ns[7].DATAA
gameStart => always1.IN1
gameOver => ns[7].OUTPUTSELECT
gameOver => ns[6].OUTPUTSELECT
gameOver => ns[5].OUTPUTSELECT
gameOver => ns[4].OUTPUTSELECT
gameOver => ns[3].OUTPUTSELECT
gameOver => ns[2].OUTPUTSELECT
gameOver => ns[1].OUTPUTSELECT
gameOver => ns[0].OUTPUTSELECT
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|pipeShifter:pipe3
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => count[7].CLK
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Clock => ps[7].CLK
Reset => always1.IN0
rightPipe[0] => ns[0].DATAA
rightPipe[1] => ns[1].DATAA
rightPipe[2] => ns[2].DATAA
rightPipe[3] => ns[3].DATAA
rightPipe[4] => ns[4].DATAA
rightPipe[5] => ns[5].DATAA
rightPipe[6] => ns[6].DATAA
rightPipe[7] => ns[7].DATAA
gameStart => always1.IN1
gameOver => ns[7].OUTPUTSELECT
gameOver => ns[6].OUTPUTSELECT
gameOver => ns[5].OUTPUTSELECT
gameOver => ns[4].OUTPUTSELECT
gameOver => ns[3].OUTPUTSELECT
gameOver => ns[2].OUTPUTSELECT
gameOver => ns[1].OUTPUTSELECT
gameOver => ns[0].OUTPUTSELECT
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|pipeShifter:pipe4
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => count[7].CLK
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Clock => ps[7].CLK
Reset => always1.IN0
rightPipe[0] => ns[0].DATAA
rightPipe[1] => ns[1].DATAA
rightPipe[2] => ns[2].DATAA
rightPipe[3] => ns[3].DATAA
rightPipe[4] => ns[4].DATAA
rightPipe[5] => ns[5].DATAA
rightPipe[6] => ns[6].DATAA
rightPipe[7] => ns[7].DATAA
gameStart => always1.IN1
gameOver => ns[7].OUTPUTSELECT
gameOver => ns[6].OUTPUTSELECT
gameOver => ns[5].OUTPUTSELECT
gameOver => ns[4].OUTPUTSELECT
gameOver => ns[3].OUTPUTSELECT
gameOver => ns[2].OUTPUTSELECT
gameOver => ns[1].OUTPUTSELECT
gameOver => ns[0].OUTPUTSELECT
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|pipeShifter:pipe5
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => count[7].CLK
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Clock => ps[7].CLK
Reset => always1.IN0
rightPipe[0] => ns[0].DATAA
rightPipe[1] => ns[1].DATAA
rightPipe[2] => ns[2].DATAA
rightPipe[3] => ns[3].DATAA
rightPipe[4] => ns[4].DATAA
rightPipe[5] => ns[5].DATAA
rightPipe[6] => ns[6].DATAA
rightPipe[7] => ns[7].DATAA
gameStart => always1.IN1
gameOver => ns[7].OUTPUTSELECT
gameOver => ns[6].OUTPUTSELECT
gameOver => ns[5].OUTPUTSELECT
gameOver => ns[4].OUTPUTSELECT
gameOver => ns[3].OUTPUTSELECT
gameOver => ns[2].OUTPUTSELECT
gameOver => ns[1].OUTPUTSELECT
gameOver => ns[0].OUTPUTSELECT
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|pipeShifter:pipe6
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => count[7].CLK
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Clock => ps[7].CLK
Reset => always1.IN0
rightPipe[0] => ns[0].DATAA
rightPipe[1] => ns[1].DATAA
rightPipe[2] => ns[2].DATAA
rightPipe[3] => ns[3].DATAA
rightPipe[4] => ns[4].DATAA
rightPipe[5] => ns[5].DATAA
rightPipe[6] => ns[6].DATAA
rightPipe[7] => ns[7].DATAA
gameStart => always1.IN1
gameOver => ns[7].OUTPUTSELECT
gameOver => ns[6].OUTPUTSELECT
gameOver => ns[5].OUTPUTSELECT
gameOver => ns[4].OUTPUTSELECT
gameOver => ns[3].OUTPUTSELECT
gameOver => ns[2].OUTPUTSELECT
gameOver => ns[1].OUTPUTSELECT
gameOver => ns[0].OUTPUTSELECT
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|pipeShifter:pipe7
Clock => count[0].CLK
Clock => count[1].CLK
Clock => count[2].CLK
Clock => count[3].CLK
Clock => count[4].CLK
Clock => count[5].CLK
Clock => count[6].CLK
Clock => count[7].CLK
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Clock => ps[7].CLK
Reset => always1.IN0
rightPipe[0] => ns[0].DATAA
rightPipe[1] => ns[1].DATAA
rightPipe[2] => ns[2].DATAA
rightPipe[3] => ns[3].DATAA
rightPipe[4] => ns[4].DATAA
rightPipe[5] => ns[5].DATAA
rightPipe[6] => ns[6].DATAA
rightPipe[7] => ns[7].DATAA
gameStart => always1.IN1
gameOver => ns[7].OUTPUTSELECT
gameOver => ns[6].OUTPUTSELECT
gameOver => ns[5].OUTPUTSELECT
gameOver => ns[4].OUTPUTSELECT
gameOver => ns[3].OUTPUTSELECT
gameOver => ns[2].OUTPUTSELECT
gameOver => ns[1].OUTPUTSELECT
gameOver => ns[0].OUTPUTSELECT
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|led_matrix_driver:led_array
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
red_array[0][0] => Mux7.IN7
red_array[0][1] => Mux6.IN7
red_array[0][2] => Mux5.IN7
red_array[0][3] => Mux4.IN7
red_array[0][4] => Mux3.IN7
red_array[0][5] => Mux2.IN7
red_array[0][6] => Mux1.IN7
red_array[0][7] => Mux0.IN7
red_array[1][0] => Mux7.IN6
red_array[1][1] => Mux6.IN6
red_array[1][2] => Mux5.IN6
red_array[1][3] => Mux4.IN6
red_array[1][4] => Mux3.IN6
red_array[1][5] => Mux2.IN6
red_array[1][6] => Mux1.IN6
red_array[1][7] => Mux0.IN6
red_array[2][0] => Mux7.IN5
red_array[2][1] => Mux6.IN5
red_array[2][2] => Mux5.IN5
red_array[2][3] => Mux4.IN5
red_array[2][4] => Mux3.IN5
red_array[2][5] => Mux2.IN5
red_array[2][6] => Mux1.IN5
red_array[2][7] => Mux0.IN5
red_array[3][0] => Mux7.IN4
red_array[3][1] => Mux6.IN4
red_array[3][2] => Mux5.IN4
red_array[3][3] => Mux4.IN4
red_array[3][4] => Mux3.IN4
red_array[3][5] => Mux2.IN4
red_array[3][6] => Mux1.IN4
red_array[3][7] => Mux0.IN4
red_array[4][0] => Mux7.IN3
red_array[4][1] => Mux6.IN3
red_array[4][2] => Mux5.IN3
red_array[4][3] => Mux4.IN3
red_array[4][4] => Mux3.IN3
red_array[4][5] => Mux2.IN3
red_array[4][6] => Mux1.IN3
red_array[4][7] => Mux0.IN3
red_array[5][0] => Mux7.IN2
red_array[5][1] => Mux6.IN2
red_array[5][2] => Mux5.IN2
red_array[5][3] => Mux4.IN2
red_array[5][4] => Mux3.IN2
red_array[5][5] => Mux2.IN2
red_array[5][6] => Mux1.IN2
red_array[5][7] => Mux0.IN2
red_array[6][0] => Mux7.IN1
red_array[6][1] => Mux6.IN1
red_array[6][2] => Mux5.IN1
red_array[6][3] => Mux4.IN1
red_array[6][4] => Mux3.IN1
red_array[6][5] => Mux2.IN1
red_array[6][6] => Mux1.IN1
red_array[6][7] => Mux0.IN1
red_array[7][0] => Mux7.IN0
red_array[7][1] => Mux6.IN0
red_array[7][2] => Mux5.IN0
red_array[7][3] => Mux4.IN0
red_array[7][4] => Mux3.IN0
red_array[7][5] => Mux2.IN0
red_array[7][6] => Mux1.IN0
red_array[7][7] => Mux0.IN0
green_array[0][0] => Mux15.IN7
green_array[0][1] => Mux14.IN7
green_array[0][2] => Mux13.IN7
green_array[0][3] => Mux12.IN7
green_array[0][4] => Mux11.IN7
green_array[0][5] => Mux10.IN7
green_array[0][6] => Mux9.IN7
green_array[0][7] => Mux8.IN7
green_array[1][0] => Mux15.IN6
green_array[1][1] => Mux14.IN6
green_array[1][2] => Mux13.IN6
green_array[1][3] => Mux12.IN6
green_array[1][4] => Mux11.IN6
green_array[1][5] => Mux10.IN6
green_array[1][6] => Mux9.IN6
green_array[1][7] => Mux8.IN6
green_array[2][0] => Mux15.IN5
green_array[2][1] => Mux14.IN5
green_array[2][2] => Mux13.IN5
green_array[2][3] => Mux12.IN5
green_array[2][4] => Mux11.IN5
green_array[2][5] => Mux10.IN5
green_array[2][6] => Mux9.IN5
green_array[2][7] => Mux8.IN5
green_array[3][0] => Mux15.IN4
green_array[3][1] => Mux14.IN4
green_array[3][2] => Mux13.IN4
green_array[3][3] => Mux12.IN4
green_array[3][4] => Mux11.IN4
green_array[3][5] => Mux10.IN4
green_array[3][6] => Mux9.IN4
green_array[3][7] => Mux8.IN4
green_array[4][0] => Mux15.IN3
green_array[4][1] => Mux14.IN3
green_array[4][2] => Mux13.IN3
green_array[4][3] => Mux12.IN3
green_array[4][4] => Mux11.IN3
green_array[4][5] => Mux10.IN3
green_array[4][6] => Mux9.IN3
green_array[4][7] => Mux8.IN3
green_array[5][0] => Mux15.IN2
green_array[5][1] => Mux14.IN2
green_array[5][2] => Mux13.IN2
green_array[5][3] => Mux12.IN2
green_array[5][4] => Mux11.IN2
green_array[5][5] => Mux10.IN2
green_array[5][6] => Mux9.IN2
green_array[5][7] => Mux8.IN2
green_array[6][0] => Mux15.IN1
green_array[6][1] => Mux14.IN1
green_array[6][2] => Mux13.IN1
green_array[6][3] => Mux12.IN1
green_array[6][4] => Mux11.IN1
green_array[6][5] => Mux10.IN1
green_array[6][6] => Mux9.IN1
green_array[6][7] => Mux8.IN1
green_array[7][0] => Mux15.IN0
green_array[7][1] => Mux14.IN0
green_array[7][2] => Mux13.IN0
green_array[7][3] => Mux12.IN0
green_array[7][4] => Mux11.IN0
green_array[7][5] => Mux10.IN0
green_array[7][6] => Mux9.IN0
green_array[7][7] => Mux8.IN0
red_driver[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
red_driver[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
red_driver[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
red_driver[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
red_driver[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
red_driver[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
red_driver[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
red_driver[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
green_driver[0] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
green_driver[1] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
green_driver[2] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
green_driver[3] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
green_driver[4] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
green_driver[5] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
green_driver[6] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
green_driver[7] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
row_sink[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[5] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[6] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[7] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|gameOver:isOver
Clock => psp[0].CLK
Clock => psp[1].CLK
Clock => psp[2].CLK
Clock => psp[3].CLK
Clock => psp[4].CLK
Clock => psp[5].CLK
Clock => psp[6].CLK
Clock => psp[7].CLK
Clock => pscc.CLK
Reset => always1.IN0
cc[0] => nscc.IN1
cc[1] => nscc.IN0
cc[2] => nscc.IN0
cc[3] => nscc.IN0
cc[4] => nscc.IN0
cc[5] => nscc.IN0
cc[6] => nscc.IN0
cc[7] => nscc.IN0
pipe[0] => psp.DATAA
pipe[0] => Equal1.IN7
pipe[1] => nscc.IN1
pipe[1] => psp.DATAA
pipe[1] => Equal1.IN6
pipe[2] => nscc.IN1
pipe[2] => psp.DATAA
pipe[2] => Equal1.IN5
pipe[3] => nscc.IN1
pipe[3] => psp.DATAA
pipe[3] => Equal1.IN4
pipe[4] => nscc.IN1
pipe[4] => psp.DATAA
pipe[4] => Equal1.IN3
pipe[5] => nscc.IN1
pipe[5] => psp.DATAA
pipe[5] => Equal1.IN2
pipe[6] => nscc.IN1
pipe[6] => psp.DATAA
pipe[6] => Equal1.IN1
pipe[7] => nscc.IN1
pipe[7] => psp.DATAA
pipe[7] => Equal1.IN0
gameStart => always1.IN1
point <= point.DB_MAX_OUTPUT_PORT_TYPE
over <= pscc.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|scoreReport:display0
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Reset => always1.IN0
gameStart => always1.IN1
beginning[0] => ps.DATAB
beginning[1] => ps.DATAB
beginning[2] => ps.DATAB
beginning[3] => ps.DATAB
beginning[4] => ps.DATAB
beginning[5] => ps.DATAB
beginning[6] => ps.DATAB
increment => ns[6].OUTPUTSELECT
increment => ns[5].OUTPUTSELECT
increment => ns[4].OUTPUTSELECT
increment => ns[3].OUTPUTSELECT
increment => ns[2].OUTPUTSELECT
increment => ns[1].OUTPUTSELECT
increment => ns[0].OUTPUTSELECT
increment => addOne.IN1
display[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
display[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
display[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
display[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
display[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
display[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
display[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
addOne <= addOne.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|scoreReport:display1
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Reset => always1.IN0
gameStart => always1.IN1
beginning[0] => ps.DATAB
beginning[1] => ps.DATAB
beginning[2] => ps.DATAB
beginning[3] => ps.DATAB
beginning[4] => ps.DATAB
beginning[5] => ps.DATAB
beginning[6] => ps.DATAB
increment => ns[6].OUTPUTSELECT
increment => ns[5].OUTPUTSELECT
increment => ns[4].OUTPUTSELECT
increment => ns[3].OUTPUTSELECT
increment => ns[2].OUTPUTSELECT
increment => ns[1].OUTPUTSELECT
increment => ns[0].OUTPUTSELECT
increment => addOne.IN1
display[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
display[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
display[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
display[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
display[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
display[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
display[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
addOne <= addOne.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|scoreReport:display2
Clock => ps[0].CLK
Clock => ps[1].CLK
Clock => ps[2].CLK
Clock => ps[3].CLK
Clock => ps[4].CLK
Clock => ps[5].CLK
Clock => ps[6].CLK
Reset => always1.IN0
gameStart => always1.IN1
beginning[0] => ps.DATAB
beginning[1] => ps.DATAB
beginning[2] => ps.DATAB
beginning[3] => ps.DATAB
beginning[4] => ps.DATAB
beginning[5] => ps.DATAB
beginning[6] => ps.DATAB
increment => ns[6].OUTPUTSELECT
increment => ns[5].OUTPUTSELECT
increment => ns[4].OUTPUTSELECT
increment => ns[3].OUTPUTSELECT
increment => ns[2].OUTPUTSELECT
increment => ns[1].OUTPUTSELECT
increment => ns[0].OUTPUTSELECT
increment => addOne.IN1
display[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
display[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
display[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
display[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
display[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
display[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
display[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
addOne <= addOne.DB_MAX_OUTPUT_PORT_TYPE


